---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template is intended to be deployed into an existing VPC with two
  public subnets. It will create an auto-scaling group of Linux bastion instances
  in the public VPC subnets. **WARNING** This template creates Amazon EC2 instance
  and related resources. You will be billed for the AWS resources used if you create
  a stack from this template. QS(0037)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VPCID
      - PublicSubnet1ID
      - PublicSubnet2ID
      - RemoteAccessCIDR
    - Label:
        default: Amazon EC2 Configuration
      Parameters:
      - KeyPairName
      - BastionAMIOS
      - BastionInstanceType
    - Label:
        default: Linux Bastion Configuration
      Parameters:
      - NumBastionHosts
    ParameterLabels:
      BastionAMIOS:
        default: Bastion AMI Operating System
      BastionInstanceType:
        default: Bastion Instance Type
      KeyPairName:
        default: Key Pair Name
      NumBastionHosts:
        default: Number of Bastion Hosts
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      RemoteAccessCIDR:
        default: Allowed Bastion External Access CIDR
      VPCID:
        default: VPC ID
Parameters:
  BastionAMIOS:
    AllowedValues:
    - Amazon-Linux-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionInstanceType:
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  KeyPairName:
    Description: Enter a Public/private key pair. If you do not have one in this region,
      please create it before continuing
    Type: AWS::EC2::KeyPair::KeyName
    Default: p7handsonlab-key
  NumBastionHosts:
    AllowedValues:
    - '1'
    Default: '1'
    Description: Enter the number of bastion hosts to create
    Type: String
  PublicSubnet1ID:
    Description: ID of the public subnet 1 that you want to provision the first bastion
      into (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: ID of the public subnet 2 you want to provision the second bastion
      into (e.g., subnet-e3246d8e)
    Type: AWS::EC2::Subnet::Id
  RemoteAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block for external SSH access to the bastions
    Default: 0.0.0.0/0
    Type: String
  VPCID:
    Description: ID of the VPC (e.g., vpc-0343606e)
    Type: AWS::EC2::VPC::Id
Rules:
  SubnetsInVPC:
    Assertions:
    - Assert:
        Fn::EachMemberIn:
        - Fn::ValueOfAll:
          - AWS::EC2::Subnet::Id
          - VpcId
        - Fn::RefAll: AWS::EC2::VPC::Id
      AssertDescription: All subnets must exist in the VPC
Mappings:
  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: Linux with Sumo Collector
      CENTOS7HVM: CentOS Linux 7 x86_64 HVM EBS 1708_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-0d8f9576.4
      US1404HVM: ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20171026
      US1604HVM: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20171026.1
    ap-northeast-1:
      AMZNLINUXHVM: ami-2803ac4e
      CENTOS7HVM: ami-e4599a82
      US1404HVM: ami-425efe24
      US1604HVM: ami-15872773
    ap-northeast-2:
      AMZNLINUXHVM: ami-fc862292
      CENTOS7HVM: ami-ea12c984
      US1404HVM: ami-99a501f7
      US1604HVM: ami-7b1cb915
    ap-south-1:
      AMZNLINUXHVM: ami-2ed19c41
      CENTOS7HVM: ami-ccde99a3
      US1404HVM: ami-3a93de55
      US1604HVM: ami-bc0d40d3
    ap-southeast-1:
      AMZNLINUXHVM: ami-dd7935be
      CENTOS7HVM: ami-1fbad07c
      US1404HVM: ami-e3c58580
      US1604HVM: ami-67a6e604
    ap-southeast-2:
      AMZNLINUXHVM: ami-ff4ea59d
      CENTOS7HVM: ami-e9c7208b
      US1404HVM: ami-10dc3372
      US1604HVM: ami-41c12e23
    ca-central-1:
      AMZNLINUXHVM: ami-ef3b838b
      CENTOS7HVM: ami-cbd069af
      US1404HVM: ami-bf4af2db
      US1604HVM: ami-8a71c9ee
    eu-central-1:
      AMZNLINUXHVM: ami-e28d098d
      CENTOS7HVM: ami-2540f74a
      US1404HVM: ami-f6dc6699
      US1604HVM: ami-97e953f8
    eu-west-1:
      AMZNLINUXHVM: ami-760aaa0f
      CENTOS7HVM: ami-5f76b626
      US1404HVM: ami-3db41044
      US1604HVM: ami-add175d4
    eu-west-2:
      AMZNLINUXHVM: ami-e3051987
      CENTOS7HVM: ami-951201f1
      US1404HVM: ami-936b77f7
      US1604HVM: ami-ecbea388
    sa-east-1:
      AMZNLINUXHVM: ami-1678037a
      CENTOS7HVM: ami-afd7a5c3
      US1404HVM: ami-ab6e16c7
      US1604HVM: ami-466b132a
    us-east-1:
      AMZNLINUXHVM: ami-6057e21a
      CENTOS7HVM: ami-db48ada1
      US1404HVM: ami-90fd5dea
      US1604HVM: ami-da05a4a0
    us-east-2:
      AMZNLINUXHVM: ami-aa1b34cf
      CENTOS7HVM: ami-d61133b3
      US1404HVM: ami-9e3e11fb
      US1604HVM: ami-336b4456
    us-west-1:
      AMZNLINUXHVM: ami-1a033c7a
      CENTOS7HVM: ami-8a6751ea
      US1404HVM: ami-a81428c8
      US1604HVM: ami-1c1d217c
    us-west-2:
      AMZNLINUXHVM: ami-32d8124a
      CENTOS7HVM: ami-e535c59d
      US1404HVM: ami-852fe1fd
      US1604HVM: ami-0a00ce72
  LinuxAMINameMap:
    Amazon-Linux-HVM:
      Code: AMZNLINUXHVM
    CentOS-7-HVM:
      Code: CENTOS7HVM
    Ubuntu-Server-14.04-LTS-HVM:
      Code: US1404HVM
    Ubuntu-Server-16.04-LTS-HVM:
      Code: US1604HVM
Conditions:
  2BastionCondition:
    Fn::Or:
    - Fn::Equals:
      - Ref: NumBastionHosts
      - '2'
    - Condition: 3BastionCondition
    - Condition: 4BastionCondition
  3BastionCondition:
    Fn::Or:
    - Fn::Equals:
      - Ref: NumBastionHosts
      - '3'
    - Condition: 4BastionCondition
  4BastionCondition:
    Fn::Equals:
    - Ref: NumBastionHosts
    - '4'
  GovCloudCondition:
    Fn::Equals:
    - Ref: AWS::Region
    - us-gov-west-1
Resources:
  BastionMainLogGroup:
    Type: AWS::Logs::LogGroup
  SSHMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName:
        Ref: BastionMainLogGroup
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
      - MetricName: SSHCommandCount
        MetricValue: 1
        MetricNamespace:
          Fn::Join:
          - "/"
          - - AWSQuickStart
            - Ref: AWS::StackName
  BastionHostRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - logs:CreateLogStream
            - logs:GetLogEvents
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutRetentionPolicy
            - logs:PutMetricFilter
            - logs:CreateLogGroup
            Resource:
              Fn::Sub:
              - arn:${Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
              - Partition:
                  Fn::If:
                  - GovCloudCondition
                  - aws-us-gov
                  - aws
            Effect: Allow
        PolicyName: bastion-cloudwatch-logs-policy
      - PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - ec2:AssociateAddress
            - ec2:DescribeAddresses
            Resource:
            - "*"
            Effect: Allow
        PolicyName: bastion-eip-policy
      Path: "/"
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Principal:
            Service:
            - ec2.amazonaws.com
          Effect: Allow
        Version: '2012-10-17'
  BastionHostProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - Ref: BastionHostRole
      Path: "/"
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIP2:
    Type: AWS::EC2::EIP
    Condition: 2BastionCondition
    Properties:
      Domain: vpc
  EIP3:
    Type: AWS::EC2::EIP
    Condition: 3BastionCondition
    Properties:
      Domain: vpc
  EIP4:
    Type: AWS::EC2::EIP
    Condition: 4BastionCondition
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName:
        Ref: BastionLaunchConfiguration
      VPCZoneIdentifier:
      - Ref: PublicSubnet1ID
      - Ref: PublicSubnet2ID
      MinSize:
        Ref: NumBastionHosts
      MaxSize:
        Ref: NumBastionHosts
      Cooldown: '300'
      DesiredCapacity:
        Ref: NumBastionHosts
      Tags:
      - Key: Name
        Value: P7HandsOnLabs-Bastion
        PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Count:
          Ref: NumBastionHosts
        Timeout: PT30M
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
          - mount-efs
          - wordpress
          - mysql
        mount-efs:
          packages:
            yum:
              nfs-utils: []
          commands:
            1-create-html-dir:
              command: mkdir -p /var/www/html
            2-attach-efs:
              command: mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
                efs.p7handsonlab.com:/ /var/www/html
        wordpress:
          packages:
            yum:
              httpd: []
          sources:
            "/var/www/html": http://wordpress.org/latest.tar.gz
          files:
            "/var/www/html/wordpress/wp-config.php":
              content:
                Fn::Join:
                - ''
                - - "<?php\n"
                  - 'define(''DB_NAME'',          ''p7handsonlab'');

'
                  - 'define(''DB_USER'',          ''admin'');

'
                  - 'define(''DB_PASSWORD'',      ''p7handsonlab'');

'
                  - 'define(''DB_HOST'',          ''rds.p7handsonlab.com'');

'
                  - 'define(''DB_CHARSET'',       ''utf8'');

'
                  - 'define(''DB_COLLATE'',       '''');

'
                  - 'define(''AUTH_KEY'',         ''f@A17vs{ mO0}:&I,6SB.QzV`E?!`/tN5:~GZX%=@ZA%!_T0-]9>g]4ll6~,6G|R'');

'
                  - 'define(''SECURE_AUTH_KEY'',  ''gTFTI|~rYHY)|mlu:Cv7RN]GQ^3ngyUbw;L0o!12]0c-ispR<-yt3qj]xjquz^&9'');

'
                  - 'define(''LOGGED_IN_KEY'',    ''Jd:HG9M)1p5t2<v~+R-vd{p-Q*|*RB^&PUI{vIrydAEEiV!{HS{jN:nErCmLv`p}'');

'
                  - 'define(''NONCE_KEY'',        ''4aMj4KZV;,Gu7(B|qOCve[c5?*J5x1+x93i:Ey6hh/6jXh+V_{V4+hw!qE^d*U,-'');

'
                  - 'define(''AUTH_SALT'',        ''_Y_&8m)FH)Cns)8}Yb8b88KDSn:p1#p(qBa<~VW&Y1v}P.*9/8S8@P`{mkNxV
                    lC'');

'
                  - 'define(''SECURE_AUTH_SALT'', ''%nG3Ag41^Lew5c86,#zbN:yPFs.GA5a)z5*:Oce1>v6uF~D`,.o1pzS)F8[bM9i['');

'
                  - 'define(''LOGGED_IN_SALT'',   ''~K<y+Ly+_Ww1~dtq>;rSQ^+{P5/k|=!]k%RXAF-Y@XMY6GSp+wJ5{(|rCzaWjZ%/'');

'
                  - 'define(''NONCE_SALT'',       '',Bs_*Y9:b/1Z:apVLHtz35uim|okkA,b|Jt[-&Nla=T{<l_#D?~6Tj-.2.]FonI~'');

'
                  - 'define(''WPLANG''            , '''');

'
                  - 'define(''WP_DEBUG''          , false);

'
                  - "$table_prefix  = 'wp_';\n"
                  - 'if ( !defined(''ABSPATH'') )

'
                  - "    define('ABSPATH', dirname(__FILE__) . '/');\n"
                  - 'require_once(ABSPATH . ''wp-settings.php'');

'
              mode: '000644'
              owner: root
              group: root
          commands:
            1-create-db:
              command: touch /var/www/html/wordpress/index.html
            2-file-perms:
              command: chown -R apache:apache /var/www/html/wordpress
        mysql:
          packages:
            yum:
              mysql-server: []
          commands:
            1-create-db:
              command: mysql -uadmin -pp7handsonlab -hrds.p7handsonlab.com -e "CREATE
                DATABASE IF NOT EXISTS p7handsonlab;"
    Properties:
      KeyName:
        Ref: KeyPairName
      IamInstanceProfile:
        Ref: BastionHostProfile
      ImageId:
        Fn::FindInMap:
        - AWSAMIRegionMap
        - Ref: AWS::Region
        - Fn::FindInMap:
          - LinuxAMINameMap
          - Ref: BastionAMIOS
          - Code
      SecurityGroups:
      - Ref: BastionSecurityGroup
      InstanceType:
        Ref: BastionInstanceType
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash\n"
            - 'export PATH=$PATH:/usr/local/bin

'
            - 'which pip &> /dev/null

'
            - 'if [ $? -ne 0 ] ; then

'
            - '    echo "PIP NOT INSTALLED"

'
            - '    [ `which yum` ] && $(yum install -y epel-release; yum install -y
              python-pip, yum install -y mysql-server) && echo "PIP INSTALLED"

'
            - '    [ `which apt-get` ] && apt-get -y update && apt-get -y install
              python-pip && echo "PIP INSTALLED"

'
            - 'fi

'
            - 'pip install --upgrade pip &> /dev/null

'
            - 'pip install awscli --ignore-installed six &> /dev/null

'
            - 'easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

'
            - EIP_LIST="
            - Ref: EIP1
            - ","
            - Fn::If:
              - 2BastionCondition
              - Ref: EIP2
              - 'Null'
            - ","
            - Fn::If:
              - 3BastionCondition
              - Ref: EIP3
              - 'Null'
            - ","
            - Fn::If:
              - 4BastionCondition
              - Ref: EIP4
              - 'Null'
            - "\"\n"
            - CLOUDWATCHGROUP=
            - Ref: BastionMainLogGroup
            - "\n"
            - 'cfn-init -v --stack '
            - Ref: AWS::StackName
            - " --resource BastionLaunchConfiguration --region "
            - Ref: AWS::Region
            - "\n"
            - 'cfn-signal -e $? --stack '
            - Ref: AWS::StackName
            - " --resource BastionAutoScalingGroup --region "
            - Ref: AWS::Region
            - "\n"
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: RemoteAccessCIDR
      - IpProtocol: icmp
        FromPort: "-1"
        ToPort: "-1"
        CidrIp:
          Ref: RemoteAccessCIDR
Outputs:
  BastionAutoScalingGroup:
    Description: Auto Scaling Group Reference ID
    Value:
      Ref: BastionAutoScalingGroup
  EIP1:
    Description: Elastic IP 1 for Bastion
    Value:
      Ref: EIP1
  EIP2:
    Condition: 2BastionCondition
    Description: Elastic IP 2 for Bastion
    Value:
      Ref: EIP2
  EIP3:
    Condition: 3BastionCondition
    Description: Elastic IP 3 for Bastion
    Value:
      Ref: EIP3
  EIP4:
    Condition: 4BastionCondition
    Description: Elastic IP 4 for Bastion
    Value:
      Ref: EIP4
  CloudWatchLogs:
    Value:
      Ref: BastionMainLogGroup
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
  BastionSecurityGroupID:
    Value:
      Ref: BastionSecurityGroup
    Description: Bastion Security Group ID
