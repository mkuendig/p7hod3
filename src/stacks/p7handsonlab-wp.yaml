---
AWSTemplateFormatVersion: '2010-09-09'
Description: Basic stack- Wordpress
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m5.large
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Instance type to use for nginx nodes.
    Type: AWS::EC2::KeyPair::KeyName
    Default: p7handsonlab-key
  VpcId:
    Description: Vpc id.
    Type: AWS::EC2::VPC::Id
  PublicSubnet1ID:
    Description: Public application subnet in Availability Zone 1.
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: Public application subnet in Availability Zone 2.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1AID:
    Description: Private application subnet in Availability Zone 1.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2AID:
    Description: Private application subnet in Availability Zone 2.
    Type: AWS::EC2::Subnet::Id
  ClusterSize:
    Description: Minimum and desired number of nodes in the cluster.
    Type: String
    Default: '2'
  MaxSize:
    Description: Maximum number of nodes in the cluster.
    Type: String
    Default: '10'
Mappings:
  Ami:
    us-east-1:
      Base: ami-6869aa05
    us-west-1:
      Base: ami-31490d51
    us-west-2:
      Base: ami-7172b611
    eu-west-1:
      Base: ami-f9dd458a
    eu-central-1:
      Base: ami-ea26ce85
    ap-northeast-1:
      Base: ami-374db956
    ap-southeast-1:
      Base: ami-a59b49c6
    ap-southeast-2:
      Base: ami-33f92051
    sa-east-1:
      Base: ami-6dd04501
  Region:
    us-east-1:
      RegionName: virginia
      S3Endpoint: s3.amazonaws.com
    us-west-1:
      RegionName: california
      S3Endpoint: s3.amazonaws.com
    us-west-2:
      RegionName: oregon
      S3Endpoint: s3.amazonaws.com
    eu-west-1:
      RegionName: ireland
      S3Endpoint: s3-eu-west-1.amazonaws.com
    eu-central-1:
      RegionName: frankfurt
      S3Endpoint: s3-eu-central-1.amazonaws.com
    ap-northeast-1:
      RegionName: japan
      S3Endpoint: s3-ap-northeast-1.amazonaws.com
    ap-southeast-1:
      RegionName: singapore
      S3Endpoint: s3-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      RegionName: sydney
      S3Endpoint: s3-ap-southeast-2.amazonaws.com
    sa-east-1:
      RegionName: brazil
      S3Endpoint: s3-sa-east-1.amazonaws.com
Resources:
  TestSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS Security Group
      VpcId:
        Ref: VpcId
  TestSecurityGroupHTTPinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: TestSecurityGroup
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0
  TestSecurityGroupHTTPinboundDev:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: TestSecurityGroup
      IpProtocol: tcp
      FromPort: '443'
      ToPort: '443'
      CidrIp: 0.0.0.0/0
  TestSecurityGroupSSHinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: TestSecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 10.0.0.0/16
  TestRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
      Path: "/"
    Type: AWS::IAM::Role
  TestProfile:
    Properties:
      Path: "/auto/"
      Roles:
      - Ref: TestRole
    Type: AWS::IAM::InstanceProfile
  PolicyRoute:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PolicyRoute
      PolicyDocument:
        Statement:
        - Action:
          - s3:*
          Effect: Allow
          Resource:
          - "*"
      Roles:
      - Ref: TestRole
  PolicyEC2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PolicyEC2
      PolicyDocument:
        Statement:
        - Action:
          - ec2:DescribeTags
          Effect: Allow
          Resource:
          - "*"
      Roles:
      - Ref: TestRole
  PolicyMetrics:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PolicyMetrics
      PolicyDocument:
        Statement:
        - Action:
          - cloudwatch:*
          Effect: Allow
          Resource:
          - "*"
      Roles:
      - Ref: TestRole
  PolicyLogs:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PolicyLogs
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          Resource:
          - arn:aws:logs:*:*:*
      Roles:
      - Ref: TestRole
  ElbSecure:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
      - Ref: TestSecurityGroup
      Subnets:
      - Ref: PublicSubnet1ID
      - Ref: PublicSubnet2ID
      Tags:
      - Key: Role
        Value: Wordpress Multi AZ
  AppLoadBalancerListener1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: AppTargetGroup1
      LoadBalancerArn:
        Ref: ElbSecure
      Port: '80'
      Protocol: HTTP
  AppTargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 20
      HealthCheckProtocol: HTTP
      HealthCheckPath: "/wordpress/index.html"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200,301'
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '30'
      - Key: stickiness.enabled
        Value: 'false'
      - Key: stickiness.type
        Value: lb_cookie
      - Key: stickiness.lb_cookie.duration_seconds
        Value: '60'
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: VpcId
      Tags:
      - Key: Role
        Value: Wordpress Multi AZ
      - Key: Segment
        Value: app
      - Key: Sector
        Value: public
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
          - mount-efs
          - webserver
        mount-efs:
          packages:
            yum:
              nfs-utils: []
          commands:
            1-create-html-dir:
              command: mkdir -p /var/www/html
            2-attach-efs:
              command: mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
                efs.p7handsonlab.com:/ /var/www/html
        webserver:
          packages:
            yum:
              httpd: []
              php: []
              php-mysql: []
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              sendmail:
                enabled: 'false'
                ensureRunning: 'false'
    Properties:
      IamInstanceProfile:
        Ref: TestProfile
      ImageId:
        Fn::FindInMap:
        - Ami
        - Ref: AWS::Region
        - Base
      InstanceType:
        Ref: InstanceType
      InstanceMonitoring: 'true'
      KeyName:
        Ref: KeyName
      AssociatePublicIpAddress: false
      SecurityGroups:
      - Ref: TestSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash\n"
            - 'yum update -y aws-cfn-bootstrap

'
            - "/opt/aws/bin/cfn-init -s "
            - Ref: AWS::StackId
            - " -r LaunchConfig "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "/opt/aws/bin/cfn-signal -e $? '"
            - Ref: WaitHandle
            - "'\n"
            - "# Setup correct file ownership\n"
            - 'chown -R apache:apache /var/www/html/wordpress

'
            - 'touch /var/www/html/wordpress/index.html

'
  WaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: AutoScalingGroup
    Properties:
      Handle:
        Ref: WaitHandle
      Timeout: '300'
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
      - ap-southeast-2a
      - ap-southeast-2b
      LaunchConfigurationName:
        Ref: LaunchConfig
      DesiredCapacity:
        Ref: ClusterSize
      MaxSize:
        Ref: MaxSize
      MinSize:
        Ref: ClusterSize
      HealthCheckType: ELB
      HealthCheckGracePeriod: '600'
      TargetGroupARNs:
      - Ref: AppTargetGroup1
      VPCZoneIdentifier:
      - Ref: PrivateSubnet1AID
      - Ref: PrivateSubnet2AID
      Tags:
      - Key: Name
        Value: P7HandsOnLabs Wordpress Server
        PropagateAtLaunch: 'true'
   # Scale Up
  AppScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: AutoScalingGroup
      Cooldown: '60'
      ScalingAdjustment: '2'
  # Scale Down
  AppScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: AutoScalingGroup
      Cooldown: '60'
      ScalingAdjustment: "-1"
  AppCPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-up if CPU trips > 65% for 1 x 60-second period
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '1'
      Threshold: '25'
      AlarmActions:
      - Ref: AppScaleUpPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: AutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
  AppCPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-down if CPU cools to < 35% for 1 x 60-second periods
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '10'
      Threshold: '25'
      AlarmActions:
      - Ref: AppScaleDownPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: AutoScalingGroup
      ComparisonOperator: LessThanThreshold
Outputs:
  WebsiteURL:
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - ElbSecure
          - DNSName
        - "/wordpress"
    Description: WordPress Website
